[{"/home/prince/job_application_portal/frontend/src/index.js":"1","/home/prince/job_application_portal/frontend/src/App.js":"2","/home/prince/job_application_portal/frontend/src/Context/AuthContext.js":"3","/home/prince/job_application_portal/frontend/src/Components/Login.js":"4","/home/prince/job_application_portal/frontend/src/Components/Home.js":"5","/home/prince/job_application_portal/frontend/src/Components/Profile.js":"6","/home/prince/job_application_portal/frontend/src/Components/Register.js":"7","/home/prince/job_application_portal/frontend/src/Components/ProfileApplicant.js":"8","/home/prince/job_application_portal/frontend/src/Components/CreateJobs.js":"9","/home/prince/job_application_portal/frontend/src/Components/DisplayJobs.js":"10","/home/prince/job_application_portal/frontend/src/Components/Recruiter.js":"11","/home/prince/job_application_portal/frontend/src/Components/FindJobs.js":"12","/home/prince/job_application_portal/frontend/src/hocs/PrivateRoute.js":"13","/home/prince/job_application_portal/frontend/src/hocs/UnPrivateRoute.js":"14","/home/prince/job_application_portal/frontend/src/Components/Navbar.js":"15","/home/prince/job_application_portal/frontend/src/Services/AuthService.js":"16","/home/prince/job_application_portal/frontend/src/Services/ProfileService.js":"17","/home/prince/job_application_portal/frontend/src/Components/Message.js":"18","/home/prince/job_application_portal/frontend/src/Components/RegisterApplicant.js":"19","/home/prince/job_application_portal/frontend/src/Components/RegisterRecruiter.js":"20","/home/prince/job_application_portal/frontend/src/Services/JobService.js":"21","/home/prince/job_application_portal/frontend/src/Services/JobFindingService.js":"22","/home/prince/job_application_portal/frontend/src/Services/ApplicationService.js":"23","/home/prince/job_application_portal/frontend/src/Components/MyApplications.js":"24","/home/prince/job_application_portal/frontend/src/Components/JobInfo.js":"25"},{"size":321,"mtime":1611383327650,"results":"26","hashOfConfig":"27"},{"size":1804,"mtime":1611742487461,"results":"28","hashOfConfig":"27"},{"size":819,"mtime":1611369211535,"results":"29","hashOfConfig":"27"},{"size":1879,"mtime":1611560383171,"results":"30","hashOfConfig":"27"},{"size":103,"mtime":1611372262208,"results":"31","hashOfConfig":"27"},{"size":3216,"mtime":1611825431563,"results":"32","hashOfConfig":"27"},{"size":1213,"mtime":1611389328723,"results":"33","hashOfConfig":"27"},{"size":5533,"mtime":1611829973497,"results":"34","hashOfConfig":"27"},{"size":4823,"mtime":1611654739229,"results":"35","hashOfConfig":"27"},{"size":5221,"mtime":1611744058320,"results":"36","hashOfConfig":"27"},{"size":822,"mtime":1611562197018,"results":"37","hashOfConfig":"27"},{"size":8985,"mtime":1611836502806,"results":"38","hashOfConfig":"27"},{"size":768,"mtime":1611478232529,"results":"39","hashOfConfig":"27"},{"size":574,"mtime":1611479188917,"results":"40","hashOfConfig":"27"},{"size":2698,"mtime":1611727903694,"results":"41","hashOfConfig":"27"},{"size":964,"mtime":1611375861834,"results":"42","hashOfConfig":"27"},{"size":1304,"mtime":1611825784911,"results":"43","hashOfConfig":"27"},{"size":401,"mtime":1611377318473,"results":"44","hashOfConfig":"27"},{"size":5422,"mtime":1611404362990,"results":"45","hashOfConfig":"27"},{"size":2765,"mtime":1611404313650,"results":"46","hashOfConfig":"27"},{"size":994,"mtime":1611627494718,"results":"47","hashOfConfig":"27"},{"size":495,"mtime":1611729660106,"results":"48","hashOfConfig":"27"},{"size":1320,"mtime":1611752127985,"results":"49","hashOfConfig":"27"},{"size":2364,"mtime":1611834838167,"results":"50","hashOfConfig":"27"},{"size":3180,"mtime":1611750731627,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1v1n82z",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"114","usedDeprecatedRules":"54"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"117","usedDeprecatedRules":"54"},"/home/prince/job_application_portal/frontend/src/index.js",[],["118","119"],"/home/prince/job_application_portal/frontend/src/App.js",["120"],"import React, { useContext } from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport Home from \"./Components/Home\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from \"./Components/Login\";\nimport Profile from \"./Components/Profile\";\nimport ProfileApplicant from \"./Components/ProfileApplicant\";\nimport Register from \"./Components/Register\";\nimport PrivateRoute from \"./hocs/PrivateRoute\";\nimport UnPrivateRoute from \"./hocs/UnPrivateRoute\";\nimport CreateJobs from \"./Components/CreateJobs\";\nimport DisplayJobs from \"./Components/DisplayJobs\";\nimport Recruiter from \"./Components/Recruiter\";\nimport FindJobs from \"./Components/FindJobs\";\nimport MyApplications from \"./Components/MyApplications\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Route exact path=\"/\" component={Home} />\n      <UnPrivateRoute path=\"/login\" component={Login} />\n      <PrivateRoute path=\"/profile\" roles={[\"recruiter\"]} component={Profile} />\n      <PrivateRoute\n        path=\"/createjob\"\n        roles={[\"recruiter\"]}\n        component={CreateJobs}\n      />\n      <PrivateRoute\n        path=\"/displayjob\"\n        roles={[\"recruiter\"]}\n        component={DisplayJobs}\n      />\n      <PrivateRoute\n        path=\"/profileapplicant\"\n        roles={[\"applicant\"]}\n        component={ProfileApplicant}\n      />\n      <PrivateRoute\n        path=\"/findjobs\"\n        roles={[\"applicant\"]}\n        component={FindJobs}\n      />\n      <PrivateRoute\n        path=\"/myapplications\"\n        roles={[\"applicant\"]}\n        component={MyApplications}\n      />\n      <PrivateRoute\n        path=\"/recruiter\"\n        roles={[\"recruiter\"]}\n        component={Recruiter}\n      />\n\n      <UnPrivateRoute path=\"/register\" component={Register} />\n    </Router>\n  );\n}\n\nexport default App;\n","/home/prince/job_application_portal/frontend/src/Context/AuthContext.js",["121"],"import React, { createContext, useState, useEffect } from \"react\";\nimport AuthService from \"../Services/AuthService\";\n\nexport const AuthContext = createContext();\nexport default ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    AuthService.isAuthenticated().then((data) => {\n      setUser(data.user);\n      setIsAuthenticated(data.isAuthenticated);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  return (\n    <div>\n      {!isLoaded ? (\n        <h1>Loading</h1>\n      ) : (\n        <AuthContext.Provider\n          value={{ user, setUser, isAuthenticated, setIsAuthenticated }}\n        >\n          {children}\n        </AuthContext.Provider>\n      )}\n    </div>\n  );\n};\n","/home/prince/job_application_portal/frontend/src/Components/Login.js",["122","123"],"import React, { useState, useContext } from \"react\";\nimport AuthService from \"../Services/AuthService\";\nimport Message from \"../Components/Message\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\nconst Login = (props) => {\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\n  const [message, setMessage] = useState(null);\n  const authContext = useContext(AuthContext);\n\n  const onChange = (e) => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    AuthService.login(user).then((data) => {\n      const { isAuthenticated, user, message } = data;\n\n      if (isAuthenticated) {\n        authContext.setUser(user);\n        authContext.setIsAuthenticated(isAuthenticated);\n        if (user.role == \"recruiter\") props.history.push(\"/recruiter\");\n        else props.history.push(\"/profileapplicant\");\n      } else {\n        setMessage({\n          msgBody: \"Incorrect credentials, please try again\",\n          msgError: true,\n        });\n      }\n    });\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            onChange={onChange}\n            name=\"email\"\n            id=\"email\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            onChange={onChange}\n            name=\"password\"\n            id=\"password\"\n          />\n        </div>\n\n        <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n          Login\n        </button>\n      </form>\n\n      {message ? <Message message={message} /> : null}\n    </div>\n  );\n};\n\nexport default Login;\n","/home/prince/job_application_portal/frontend/src/Components/Home.js",[],"/home/prince/job_application_portal/frontend/src/Components/Profile.js",["124"],"import React, { useState, useEffect } from \"react\";\nimport Message from \"../Components/Message\";\n\nimport ProfileService from \"../Services/ProfileService\";\n\nconst Profile = () => {\n  const [data, setData] = useState({\n    email: \"\",\n    name: \"\",\n    contact: \"\",\n    bio: \"\",\n  });\n  const [copy, setCopy] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    ProfileService.getrecruiter().then((result) => {\n      const values = { ...data };\n      values[\"email\"] = result.email;\n      values[\"name\"] = result._recruiter.name;\n      values[\"contact\"] = result._recruiter.contact;\n      values[\"bio\"] = result._recruiter.bio;\n      setData(values);\n    });\n  }, []);\n\n  const handleEdit = () => {\n    setEdit(true);\n    setCopy(data);\n    document.getElementById(\"bio\").disabled = false;\n\n    document.getElementById(\"name\").disabled = false;\n    document.getElementById(\"contact\").disabled = false;\n  };\n\n  const handleSubmit = () => {\n    ProfileService.modifyRecruiter(data).then((result) => {\n      const { message } = result;\n      setMessage(message);\n      if (message) {\n        if (message.msgError) {\n          setData(copy);\n        }\n      }\n    });\n    document.getElementById(\"bio\").disabled = true;\n    document.getElementById(\"name\").disabled = true;\n    document.getElementById(\"contact\").disabled = true;\n\n    setEdit(false);\n  };\n\n  const onChange = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div>\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            disabled=\"disabled\"\n            id=\"email\"\n            name=\"email\"\n            value={data.email}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"bio\">Bio:</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            disabled=\"disabled\"\n            id=\"bio\"\n            name=\"bio\"\n            value={data.bio}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            disabled=\"disabled\"\n            id=\"name\"\n            name=\"name\"\n            value={data.name}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"contact\">Contact:</label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            disabled=\"disabled\"\n            id=\"contact\"\n            name=\"contact\"\n            value={data.contact}\n            onChange={onChange}\n          />\n        </div>\n      </form>\n      {!edit ? (\n        <button type=\"button\" onClick={handleEdit}>\n          Edit\n        </button>\n      ) : null}\n      {edit ? (\n        <button type=\"button\" onClick={handleSubmit}>\n          Save Changes\n        </button>\n      ) : null}\n      {message ? <Message message={message} /> : null}\n    </div>\n  );\n};\n\nexport default Profile;\n","/home/prince/job_application_portal/frontend/src/Components/Register.js",["125","126"],"import React, { useState } from \"react\";\nimport RegisterApplicant from \"./RegisterApplicant\";\nimport RegisterRecruiter from \"./RegisterRecruiter\";\n\nconst Register = (props) => {\n  const [role, setRole] = useState(null);\n\n  const onClickApplicant = () => {\n    setRole(\"applicant\");\n  };\n\n  const onClickRecruiter = () => {\n    setRole(\"recruiter\");\n  };\n\n  const display = () => {\n    if (role) {\n      if (role === \"applicant\")\n        return <RegisterApplicant history={props.history} />;\n      else return <RegisterRecruiter history={props.history} />;\n    }\n  };\n\n  return (\n    <div className=\"dropdown\">\n      <button\n        className=\"btn btn-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        Select Role\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        <a className=\"dropdown-item\" onClick={onClickApplicant}>\n          Applicant\n        </a>\n        <a className=\"dropdown-item\" onClick={onClickRecruiter}>\n          Recruiter\n        </a>\n      </div>\n      {display()}\n    </div>\n  );\n};\n\nexport default Register;\n","/home/prince/job_application_portal/frontend/src/Components/ProfileApplicant.js",["127","128"],"import React, { useState, useEffect } from \"react\";\n\nimport ProfileService from \"../Services/ProfileService\";\nimport Message from \"./Message\";\n\nconst Profile = () => {\n  const [data, setData] = useState({\n    email: \"\",\n    skills: [],\n    name: \"\",\n    education: [],\n  });\n\n  const [message, setMessage] = useState(null);\n\n  const [copy, setCopy] = useState(\"\");\n\n  const handleSubmit = () => {\n    ProfileService.modifyApplicant(data).then((result) => {\n      const { message } = result;\n      setMessage(message);\n      if (message) {\n        if (message.msgError) {\n          setData(copy);\n        }\n      }\n    });\n  };\n\n  const handleChangeSkill = (idx, event) => {\n    const values = { ...data };\n    values.skills = [...data.skills];\n    values.skills[idx] = event.target.value;\n    setData(values);\n  };\n\n  const handleChangeEducation = (idx, event) => {\n    const values = { ...data };\n\n    values.education[idx][event.target.name] = event.target.value;\n    setData(values);\n  };\n\n  const onChange = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const handleplus = () => {\n    const values = { ...data };\n    values.skills = [...data.skills];\n    values.skills.push(\"\");\n\n    setData(values);\n  };\n\n  const handleminus = (idx) => {\n    const values = { ...data };\n    values.skills = [...data.skills];\n    if (values.skills.length > 1) values.skills.splice(idx, 1);\n    setData(values);\n  };\n\n  const handleplusedu = () => {\n    const values = { ...data };\n\n    values.education.push({ instituteName: \"\", startYear: \"\", endYear: \"\" });\n    setData(values);\n  };\n\n  const handleminusedu = (idx) => {\n    const values = { ...data };\n    if (values.education.length > 1) values.education.splice(idx, 1);\n    setData(values);\n  };\n\n  useEffect(() => {\n    ProfileService.getapplicant().then((result) => {\n      const values = { ...data };\n      values[\"email\"] = result.email;\n      values[\"name\"] = result._applicant.name;\n      values[\"skills\"] = result._applicant.skills;\n      values[\"education\"] = result._applicant.education;\n\n      setData(values);\n    });\n  }, []);\n\n  return (\n    <div>\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            name=\"email\"\n            value={data.email}\n            disabled=\"disabled\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"skills\">Skills:</label>\n          {data.skills.map((skill, idx) => (\n            <div key={idx}>\n              <input\n                type=\"text\"\n                value={data.skills[idx]}\n                className=\"form-control\"\n                id={\"skills\" + idx}\n                onChange={(event) => {\n                  handleChangeSkill(idx, event);\n                }}\n              />\n              <button type=\"button\" onClick={() => handleplus()}>\n                +\n              </button>\n              <button type=\"button\" onClick={() => handleminus(idx)}>\n                -\n              </button>\n            </div>\n          ))}\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            name=\"name\"\n            value={data.name}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"education\">Education:</label>\n\n          <div id=\"education\">\n            {data.education.map((skill, idx) => (\n              <div key={idx}>\n                <label htmlFor=\"instituteName\">Institute Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id={\"instituteName\" + idx}\n                  name=\"instituteName\"\n                  value={data.education[idx].instituteName}\n                  onChange={(event) => handleChangeEducation(idx, event)}\n                  placeholder=\"institute name\"\n                />\n                <label htmlFor=\"startYear\">Start Year</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id={\"startYear\" + idx}\n                  name=\"startYear\"\n                  placeholder=\"Start Year\"\n                  value={data.education[idx].startYear}\n                  onChange={(event) => handleChangeEducation(idx, event)}\n                />\n                <label htmlFor=\"endYear\">End Year</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id={\"endYear\" + idx}\n                  name=\"endYear\"\n                  placeholder=\"End Year\"\n                  value={data.education[idx].endYear}\n                  onChange={(event) => handleChangeEducation(idx, event)}\n                />\n                <div>\n                  <button type=\"button\" onClick={() => handleplusedu()}>\n                    +\n                  </button>\n                  <button type=\"button\" onClick={() => handleminusedu(idx)}>\n                    -\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </form>\n\n      <button type=\"button\" onClick={handleSubmit}>\n        Save Changes\n      </button>\n      {message ? <Message message={message} /> : null}\n    </div>\n  );\n};\n\nexport default Profile;\n","/home/prince/job_application_portal/frontend/src/Components/CreateJobs.js",[],"/home/prince/job_application_portal/frontend/src/Components/DisplayJobs.js",["129","130"],"import React, { useState, useEffect } from \"react\";\nimport JobService from \"../Services/JobService\";\nimport Message from \"../Components/Message\";\nimport DateMomentUtils from \"@date-io/moment\"; // choose your lib\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { Link } from \"react-router-dom\";\nimport JobInfo from \"./JobInfo\";\n\nconst DisplayJobs = (props) => {\n  const [data, setData] = useState([]);\n  const [edit, setEdit] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [state, setState] = useState(null);\n\n  useEffect(() => {\n    JobService.getjob().then((data) => {\n      const values = [];\n      data.map((job, idx) => {\n        values.push(false);\n      });\n      setEdit(values);\n      setState(values);\n      setData(data);\n      const { message } = data;\n      setMessage(message);\n    });\n  }, []);\n\n  const handleDelete = (idx) => {\n    JobService.deletejob({ _id: data[idx]._id }).then((res) => {\n      const values = [...data];\n      values.splice(idx, 1);\n      setData(values);\n    });\n  };\n\n  const handleEdit = (job, idx) => {\n    const values = [...edit];\n    values[idx] = true;\n    setEdit(values);\n    document.getElementById(\"maxApplicants\" + idx).disabled = false;\n    document.getElementById(\"maxPositions\" + idx).disabled = false;\n  };\n\n  const renderDate = (job, idx) => {\n    return (\n      <div>\n        <label htmlFor=\"deadline\">Deadline: </label>\n        <MuiPickersUtilsProvider utils={DateMomentUtils}>\n          <DateTimePicker\n            value={job.deadline}\n            onChange={(val) => onDateChange(val, idx)}\n            name=\"deadline\"\n            className=\"form-control\"\n            id=\"deadline\"\n          />\n        </MuiPickersUtilsProvider>\n      </div>\n    );\n  };\n\n  const renderSubmit = (job, idx) => {\n    return (\n      <button\n        type=\"button\"\n        onClick={(e) => {\n          onSubmit(e, idx);\n        }}\n      >\n        Save Changes\n      </button>\n    );\n  };\n\n  const onSubmit = (e, idx) => {\n    e.preventDefault();\n    JobService.modifyjob(data[idx]).then((data) => {\n      const { message } = data;\n      setMessage(message);\n      const values = [...edit];\n      values[idx] = false;\n      setEdit(values);\n    });\n  };\n\n  const onChange = (e, idx) => {\n    const values = [...data];\n    values[idx][e.target.name] = e.target.value;\n    setData(values);\n  };\n\n  const onDateChange = (val, idx) => {\n    const values = [...data];\n    values[idx].deadline = val;\n    setData(values);\n  };\n\n  const generateId = (string, idx) => {\n    return string + idx;\n  };\n\n  const handleInfo = (job, idx) => {\n    const values = [...state];\n    values[idx] = true;\n    setState(values);\n  };\n\n  const helper = (job, idx) => {\n    return (\n      <div key={idx}>\n        <button type=\"button\" onClick={() => handleInfo(job, idx)}>\n          Job #{idx + 1}\n        </button>\n\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              disabled=\"disabled\"\n              id=\"title\"\n              name=\"title\"\n              value={job.title}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"dateOfPosting\">Date of Posting:</label>\n            <input\n              type=\"datetime-local\"\n              className=\"form-control\"\n              disabled=\"disabled\"\n              id=\"dateOfPosting\"\n              name=\"dateOfPostinge\"\n              value={job.dateOfPosting}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"maxApplicants\">Maximum number of Applicants:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              disabled=\"disabled\"\n              id={generateId(\"maxApplicants\", idx)}\n              name=\"maxApplicants\"\n              value={job.maxApplicants}\n              onChange={(event) => onChange(event, idx)}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"maxPositions\">Total Positions:</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              disabled=\"disabled\"\n              id={generateId(\"maxPositions\", idx)}\n              name=\"maxPositions\"\n              value={job.maxPositions}\n              onChange={(event) => onChange(event, idx)}\n            />\n          </div>\n          {edit[idx] ? renderDate(job, idx) : null}\n          {edit[idx] ? renderSubmit(job, idx) : null}\n          {!edit[idx] ? (\n            <button type=\"button\" onClick={() => handleDelete(idx)}>\n              -\n            </button>\n          ) : null}\n          {!edit[idx] ? (\n            <button type=\"button\" onClick={() => handleEdit(job, idx)}>\n              Edit\n            </button>\n          ) : null}\n        </form>\n        {message ? <Message message={message} /> : null}\n        {state[idx] ? <JobInfo id={job._id} /> : null}\n      </div>\n    );\n  };\n  return (\n    <div>\n      <h1>Display Jobs</h1>\n      {data.map((job, idx) => helper(job, idx))}\n    </div>\n  );\n};\n\nexport default DisplayJobs;\n","/home/prince/job_application_portal/frontend/src/Components/Recruiter.js",["131","132","133","134"],"import React, { useState } from \"react\";\n\nimport Profile from \"./Profile\";\nimport CreateJobs from \"./CreateJobs\";\nimport DisplayJobs from \"./DisplayJobs\";\n\nconst Recruiter = (props) => {\n  return (\n    <div>\n      <button\n        className=\"btn btn-lg btn-primary btn-block\"\n        type=\"button\"\n        onClick={() => props.history.push(\"/profile\")}\n      >\n        MyProfile\n      </button>\n      <button\n        className=\"btn btn-lg btn-primary btn-block\"\n        type=\"button\"\n        onClick={() => props.history.push(\"/createjob\")}\n      >\n        Create Jobs\n      </button>\n      <button\n        className=\"btn btn-lg btn-primary btn-block\"\n        type=\"button\"\n        onClick={() => props.history.push(\"/displayjob\")}\n      >\n        Display Jobs\n      </button>\n    </div>\n  );\n};\n\nexport default Recruiter;\n","/home/prince/job_application_portal/frontend/src/Components/FindJobs.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"/home/prince/job_application_portal/frontend/src/hocs/PrivateRoute.js",[],"/home/prince/job_application_portal/frontend/src/hocs/UnPrivateRoute.js",[],"/home/prince/job_application_portal/frontend/src/Components/Navbar.js",[],"/home/prince/job_application_portal/frontend/src/Services/AuthService.js",["155"],"export default {\n  login: (user) => {\n    return fetch(\"/user/login\", {\n      method: \"post\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => {\n      if (res.status !== 401) return res.json().then((data) => data);\n      else return { isAuthenticated: false, user: \"\" };\n    });\n  },\n\n  register: (user) => {\n    return fetch(\"/user/register\", {\n      method: \"post\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n  logout: () => {\n    return fetch(\"/user/logout\")\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n  isAuthenticated: () => {\n    return fetch(\"user/authenticated\").then((res) => {\n      if (res.status !== 401) return res.json().then((data) => data);\n      else return { isAuthenticated: false, user: \"\" };\n    });\n  },\n};\n","/home/prince/job_application_portal/frontend/src/Services/ProfileService.js",["156"],"export default {\n  getrecruiter: () => {\n    return fetch(\"/user/recruiterdata\").then((res) => {\n      if (res.status !== 401) return res.json().then((data) => data);\n      else return { message: { msgBody: \"UnAuthorized\", msgError: true } };\n    });\n  },\n  getapplicant: () => {\n    return fetch(\"/user/applicantdata\").then((res) => {\n      if (res.status !== 401) return res.json().then((data) => data);\n      else return { message: { msgBody: \"UnAuthorized\", msgError: true } };\n    });\n  },\n  getapplicantbyId: (user) => {\n    return fetch(\"/user/applicantdata\", {\n      method: \"post\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n  modifyRecruiter: (job) => {\n    return fetch(\"/user/recruiter\", {\n      method: \"put\",\n      body: JSON.stringify(job),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n  modifyApplicant: (job) => {\n    return fetch(\"/user/applicant\", {\n      method: \"put\",\n      body: JSON.stringify(job),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n};\n","/home/prince/job_application_portal/frontend/src/Components/Message.js",[],"/home/prince/job_application_portal/frontend/src/Components/RegisterApplicant.js",[],"/home/prince/job_application_portal/frontend/src/Components/RegisterRecruiter.js",[],"/home/prince/job_application_portal/frontend/src/Services/JobService.js",["157"],"export default {\n  registerjob: (job) => {\n    return fetch(\"/job\", {\n      method: \"post\",\n      body: JSON.stringify(job),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n\n  getjob: () => {\n    return fetch(\"/job\").then((res) => {\n      if (res.status !== 401) return res.json().then((data) => data);\n      else return { message: { msgBody: \"UnAuthorized\", msgError: true } };\n    });\n  },\n\n  deletejob: (job) => {\n    return fetch(\"/job\", {\n      method: \"delete\",\n      body: JSON.stringify(job),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n\n  modifyjob: (job) => {\n    return fetch(\"/job\", {\n      method: \"put\",\n      body: JSON.stringify(job),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n};\n","/home/prince/job_application_portal/frontend/src/Services/JobFindingService.js",["158"],"export default {\n  getjob: () => {\n    return fetch(\"/jobfind\").then((res) => {\n      if (res.status !== 401) return res.json().then((data) => data);\n      else return { message: { msgBody: \"UnAuthorized\", msgError: true } };\n    });\n  },\n\n  jobByid: (job) => {\n    return fetch(\"/jobfind\", {\n      method: \"post\",\n      body: JSON.stringify(job),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n};\n","/home/prince/job_application_portal/frontend/src/Services/ApplicationService.js",["159"],"export default {\n  isApplied: (job) => {\n    return fetch(\"/application/isapplied\", {\n      method: \"post\",\n      body: JSON.stringify(job),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n  Apply: (job) => {\n    return fetch(\"/application\", {\n      method: \"post\",\n      body: JSON.stringify(job),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n  myapplication: () => {\n    return fetch(\"/application/myapplication\").then((res) => {\n      if (res.status !== 401) return res.json().then((data) => data);\n      else return { message: { msgBody: \"UnAuthorized\", msgError: true } };\n    });\n  },\n  myopenapplication: () => {\n    return fetch(\"/application/myopenapplication\").then((res) => {\n      if (res.status !== 401) return res.json().then((data) => data);\n      else return { message: { msgBody: \"UnAuthorized\", msgError: true } };\n    });\n  },\n  getapplicants: (job) => {\n    return fetch(\"/application/getapplicants\", {\n      method: \"post\",\n      body: JSON.stringify(job),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  },\n};\n","/home/prince/job_application_portal/frontend/src/Components/MyApplications.js",["160","161","162","163"],"import React, { useState, useEffect } from \"react\";\nimport ApplicationService from \"../Services/ApplicationService\";\nimport JobFindingService from \"../Services/JobFindingService\";\n\nconst MyApplications = (props) => {\n  const [data, setData] = useState([]);\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    ApplicationService.myapplication().then((data) => {\n      const values = [];\n      let temp = data.map(async (entry, idx) => {\n        // JobFindingService.jobByid({ jobId: entry.jobId }).then((res) => {\n        //   setData([{ ...res, [\"status\"]: entry.Status }]);\n        //   values.push({ ...res, [\"status\"]: entry.Status });\n        // });\n        let res = await JobFindingService.jobByid({ jobId: entry.jobId });\n        // values.push({ ...res, [\"status\"]: entry.Status });\n        // setData(values);\n        return res;\n      });\n      Promise.all(temp).then((result) => {\n        const ele = result.map((e, i) => {\n          return { ...e, [\"status\"]: data[i].Status };\n        });\n        setData(ele);\n      });\n      const { message } = data;\n      setMessage(message);\n    });\n  }, []);\n\n  const renderData = () => {\n    return (\n      <>\n        <tbody>\n          {data.map((job, idx) => (\n            <tr>\n              <th scope=\"row\">{idx + 1}</th>\n              <td>{job.title}</td>\n              <td>{job.nameR}</td>\n              <td>Not Applicable</td>\n\n              <td>{job.salary}</td>\n              <td>{job.status}</td>\n            </tr>\n          ))}\n        </tbody>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <h1>My Applications</h1>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">Recruiter's Name</th>\n\n            <th scope=\"col\">Date of joining</th>\n\n            <th scope=\"col\">salary</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((job, idx) => (\n            <tr>\n              <th scope=\"row\">{idx + 1}</th>\n              <td>{job.title}</td>\n              <td>{job.nameR}</td>\n              <td>Not Applicable</td>\n\n              <td>{job.salary}</td>\n              <td>{job.status}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default MyApplications;\n","/home/prince/job_application_portal/frontend/src/Components/JobInfo.js",["164","165","166","167","168","169","170","171"],"import React, { useState, useEffect } from \"react\";\nimport ApplicationService from \"../Services/ApplicationService\";\nimport ProfileService from \"../Services/ProfileService\";\n\nconst Jobinfo = (props) => {\n  const [data, setData] = useState([]);\n  const [display, setDisplay] = useState([]);\n  useEffect(() => {\n    ApplicationService.getapplicants({ jobId: props.id }).then((data) => {\n      let temp = data.map((entry, idx) => {\n        return ProfileService.getapplicantbyId({ id: entry.applicantId });\n      });\n      Promise.all(temp).then((result) => {\n        const ele = result.map((e, i) => {\n          return {\n            ...e._applicant,\n            [\"SOP\"]: data[i].SOP,\n            [\"Status\"]: data[i].Status,\n            [\"doa\"]: data[i].DOA,\n          };\n        });\n        setData(ele);\n        setDisplay(ele);\n      });\n    });\n  }, []);\n\n  const dynamicSort = (property, sortOrder) => {\n    return function (a, b) {\n      /* next line works with strings and numbers,\n       * and you may want to customize it to your needs\n       */\n      var result =\n        a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n      return result * sortOrder;\n    };\n  };\n\n  const sortData = (param) => {\n    var order = prompt(\"Enter 0 for ascending and 1 for descending\");\n\n    const values = [...display];\n    if (order === \"0\") values.sort(dynamicSort(param, 1));\n    else if (order === \"1\") values.sort(dynamicSort(param, -1));\n    setDisplay(values);\n  };\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          className=\"btn btn-secondary dropdown-toggle\"\n          type=\"button\"\n          id=\"dropdownMenuButton\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          Sort Results\n        </button>\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n          <a className=\"dropdown-item\" onClick={() => sortData(\"name\")}>\n            Name\n          </a>\n          <a className=\"dropdown-item\" onClick={() => sortData(\"doa\")}>\n            Date of Application\n          </a>\n          <a className=\"dropdown-item\" onClick={() => sortData(\"rating\")}>\n            Rating\n          </a>\n        </div>\n      </div>\n\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Skills</th>\n\n            <th scope=\"col\">Date of Application</th>\n            <th scope=\"col\">Rating</th>\n            <th scope=\"col\">Education</th>\n            <th scope=\"col\">SOP</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {display.map((job, idx) => (\n            <tr>\n              <th scope=\"row\">{idx + 1}</th>\n              <td>{job.name}</td>\n              <td>{JSON.stringify(job.skills)}</td>\n              <td>{job.doa}</td>\n              <td>{job.rating}</td>\n              <td>{JSON.stringify(job.education)}</td>\n              <td>{job.SOP}</td>\n              <td>{job.Status}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Jobinfo;\n",{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":5,"column":1,"nodeType":"182","endLine":31,"endColumn":3},{"ruleId":"176","severity":1,"message":"183","line":18,"column":38,"nodeType":"178","messageId":"179","endLine":18,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":23,"column":23,"nodeType":"186","messageId":"187","endLine":23,"endColumn":25},{"ruleId":"188","severity":1,"message":"189","line":26,"column":6,"nodeType":"190","endLine":26,"endColumn":8,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":37,"column":9,"nodeType":"194","endLine":37,"endColumn":65},{"ruleId":"192","severity":1,"message":"193","line":40,"column":9,"nodeType":"194","endLine":40,"endColumn":65},{"ruleId":"176","severity":1,"message":"195","line":16,"column":16,"nodeType":"178","messageId":"179","endLine":16,"endColumn":23},{"ruleId":"188","severity":1,"message":"189","line":86,"column":6,"nodeType":"190","endLine":86,"endColumn":8,"suggestions":"196"},{"ruleId":"176","severity":1,"message":"197","line":6,"column":10,"nodeType":"178","messageId":"179","endLine":6,"endColumn":14},{"ruleId":"198","severity":1,"message":"199","line":18,"column":27,"nodeType":"200","messageId":"201","endLine":18,"endColumn":29},{"ruleId":"176","severity":1,"message":"202","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"203","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":15},{"ruleId":"176","severity":1,"message":"204","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":18},{"ruleId":"176","severity":1,"message":"205","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":19},{"ruleId":"176","severity":1,"message":"206","line":11,"column":10,"nodeType":"178","messageId":"179","endLine":11,"endColumn":16},{"ruleId":"176","severity":1,"message":"207","line":11,"column":18,"nodeType":"178","messageId":"179","endLine":11,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":42,"column":24,"nodeType":"186","messageId":"187","endLine":42,"endColumn":26},{"ruleId":"208","severity":1,"message":"209","line":42,"column":51,"nodeType":"210","messageId":"211","endLine":42,"endColumn":71,"fix":"212"},{"ruleId":"208","severity":1,"message":"209","line":43,"column":37,"nodeType":"210","messageId":"211","endLine":43,"endColumn":56,"fix":"213"},{"ruleId":"184","severity":1,"message":"214","line":78,"column":13,"nodeType":"186","messageId":"187","endLine":78,"endColumn":15},{"ruleId":"184","severity":1,"message":"214","line":78,"column":26,"nodeType":"186","messageId":"187","endLine":78,"endColumn":28},{"ruleId":"192","severity":1,"message":"193","line":180,"column":11,"nodeType":"194","endLine":180,"endColumn":75},{"ruleId":"192","severity":1,"message":"193","line":183,"column":11,"nodeType":"194","endLine":183,"endColumn":80},{"ruleId":"192","severity":1,"message":"193","line":186,"column":11,"nodeType":"194","endLine":186,"endColumn":75},{"ruleId":"192","severity":1,"message":"193","line":220,"column":11,"nodeType":"194","endLine":223,"endColumn":12},{"ruleId":"192","severity":1,"message":"193","line":226,"column":11,"nodeType":"194","endLine":229,"endColumn":12},{"ruleId":"192","severity":1,"message":"193","line":232,"column":11,"nodeType":"194","endLine":235,"endColumn":12},{"ruleId":"192","severity":1,"message":"193","line":253,"column":11,"nodeType":"194","endLine":253,"endColumn":76},{"ruleId":"192","severity":1,"message":"193","line":256,"column":11,"nodeType":"194","endLine":256,"endColumn":76},{"ruleId":"192","severity":1,"message":"193","line":259,"column":11,"nodeType":"194","endLine":259,"endColumn":76},{"ruleId":"192","severity":1,"message":"193","line":262,"column":11,"nodeType":"194","endLine":262,"endColumn":76},{"ruleId":"192","severity":1,"message":"193","line":265,"column":11,"nodeType":"194","endLine":265,"endColumn":76},{"ruleId":"192","severity":1,"message":"193","line":268,"column":11,"nodeType":"194","endLine":268,"endColumn":76},{"ruleId":"192","severity":1,"message":"193","line":271,"column":11,"nodeType":"194","endLine":271,"endColumn":76},{"ruleId":"180","severity":1,"message":"215","line":1,"column":1,"nodeType":"182","endLine":37,"endColumn":3},{"ruleId":"180","severity":1,"message":"215","line":1,"column":1,"nodeType":"182","endLine":47,"endColumn":3},{"ruleId":"180","severity":1,"message":"215","line":1,"column":1,"nodeType":"182","endLine":44,"endColumn":3},{"ruleId":"180","severity":1,"message":"215","line":1,"column":1,"nodeType":"182","endLine":20,"endColumn":3},{"ruleId":"180","severity":1,"message":"215","line":1,"column":1,"nodeType":"182","endLine":47,"endColumn":3},{"ruleId":"176","severity":1,"message":"183","line":7,"column":10,"nodeType":"178","messageId":"179","endLine":7,"endColumn":17},{"ruleId":"176","severity":1,"message":"216","line":11,"column":13,"nodeType":"178","messageId":"179","endLine":11,"endColumn":19},{"ruleId":"208","severity":1,"message":"217","line":24,"column":26,"nodeType":"210","messageId":"211","endLine":24,"endColumn":52,"fix":"218"},{"ruleId":"176","severity":1,"message":"219","line":33,"column":9,"nodeType":"178","messageId":"179","endLine":33,"endColumn":19},{"ruleId":"176","severity":1,"message":"220","line":6,"column":10,"nodeType":"178","messageId":"179","endLine":6,"endColumn":14},{"ruleId":"208","severity":1,"message":"221","line":17,"column":13,"nodeType":"210","messageId":"211","endLine":17,"endColumn":33,"fix":"222"},{"ruleId":"208","severity":1,"message":"223","line":18,"column":13,"nodeType":"210","messageId":"211","endLine":18,"endColumn":39,"fix":"224"},{"ruleId":"208","severity":1,"message":"225","line":19,"column":13,"nodeType":"210","messageId":"211","endLine":19,"endColumn":33,"fix":"226"},{"ruleId":"188","severity":1,"message":"227","line":26,"column":6,"nodeType":"190","endLine":26,"endColumn":8,"suggestions":"228"},{"ruleId":"192","severity":1,"message":"193","line":62,"column":11,"nodeType":"194","endLine":62,"endColumn":73},{"ruleId":"192","severity":1,"message":"193","line":65,"column":11,"nodeType":"194","endLine":65,"endColumn":72},{"ruleId":"192","severity":1,"message":"193","line":68,"column":11,"nodeType":"194","endLine":68,"endColumn":75},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'message' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["231"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setCopy' is assigned a value but never used.",["232"],"'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'Profile' is defined but never used.","'CreateJobs' is defined but never used.","'DisplayJobs' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"isApplied\"] found.","Property","unnecessarilyComputedProperty",{"range":"233","text":"234"},{"range":"235","text":"234"},"Expected '!==' and instead saw '!='.","Assign object to a variable before exporting as module default","'values' is assigned a value but never used.","Unnecessarily computed property [\"status\"] found.",{"range":"236","text":"237"},"'renderData' is assigned a value but never used.","'data' is assigned a value but never used.","Unnecessarily computed property [\"SOP\"] found.",{"range":"238","text":"239"},"Unnecessarily computed property [\"Status\"] found.",{"range":"240","text":"241"},"Unnecessarily computed property [\"doa\"] found.",{"range":"242","text":"243"},"React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["244"],"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"245","fix":"247"},[1417,1430],"\"isApplied\"",[1477,1490],[981,991],"\"status\"",[660,667],"\"SOP\"",[694,704],"\"Status\"",[734,741],"\"doa\"",{"desc":"248","fix":"249"},"Update the dependencies array to be: [data]",{"range":"250","text":"251"},{"range":"252","text":"251"},"Update the dependencies array to be: [props.id]",{"range":"253","text":"254"},[740,742],"[data]",[2107,2109],[851,853],"[props.id]"]